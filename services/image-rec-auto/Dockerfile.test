ARG BASE_BUILDER=alpine:3.9
ARG BASE=nvcr.io/nvidia/l4t-pytorch:r32.4.4-pth1.6-py3

# Compile the proto files (using alpine for easy recent protoc
# install).
FROM ${BASE_BUILDER} AS builder

WORKDIR /builder

RUN apk --no-cache add \
    protobuf

COPY common/messages/image_rec.proto \
    common/messages/imagery.proto \
    common/messages/interop.proto \
    common/messages/telemetry.proto \
    messages/

RUN mkdir dist && protoc --python_out=dist messages/*.proto

# Testing image.
FROM ${BASE}

WORKDIR /test

RUN apt-get update && apt-get install -y \
    python3-dev \
    python3-pip \
    zlib1g-dev \
    libjpeg-dev \
    libopenblas-base \
    libopenmpi-dev 

RUN python3 -m pip install --upgrade pip

COPY common/python/requirements.txt common/requirements.txt
COPY image-rec-auto/requirements.txt .
COPY image-rec-auto/requirements-test.txt .

RUN python3 -m pip install  -r common/requirements.txt \
    -r requirements.txt \
    -r requirements-test.txt \
    Cython==0.29.21 \
    pyyaml==5.3.1

# Install PyTorch. NOTE: here is a thread of the pre-built whls (as of Nov 2020):
# https://forums.developer.nvidia.com/t/pytorch-for-jetson-version-1-7-0-now-available/72048
RUN wget https://nvidia.box.com/shared/static/wa34qwrwtk9njtyarwt5nvo6imenfy26.whl \
    -O torch-1.7.0-cp36-cp36m-linux_aarch64.whl \
    && python3 -m pip install torch-1.7.0-cp36-cp36m-linux_aarch64.whl \
    && rm torch-1.7.0-cp36-cp36m-linux_aarch64.whl

ARG HAWK_EYE_VERSION=0.0.1b0
RUN wget https://github.com/uavaustin/hawk-eye/releases/download/v${HAWK_EYE_VERSION}/hawk_eye-${HAWK_EYE_VERSION}-py3-none-any.whl \
    -O  hawk_eye-${HAWK_EYE_VERSION}-py3-none-any.whl \
    && python3 -m pip install hawk_eye-${HAWK_EYE_VERSION}-py3-none-any.whl \
    && rm hawk_eye-${HAWK_EYE_VERSION}-py3-none-any.whl

# Copy the protobuf messages from above.
COPY --from=builder /builder/dist/messages messages

COPY common/python common
COPY image-rec-auto/service service
COPY image-rec-auto/test test
COPY image-rec-auto/setup.cfg .

ENV PYTHONUNBUFFERED=TRUE

CMD pycodestyle --max-line-length=90 service test \
    && python3 -m pytest --cov=service test \
    && coverage html -d coverage/html
